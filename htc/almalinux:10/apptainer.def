Bootstrap: docker
From: almalinux:10-kitten

%labels
    osg.name AlmaLinux 10
    osg.description AlmaLinux 10 base image
    osg.url https://almalinux.org/
    osg.category Base
    osg.definition_url https://github.com/osg-htc/htc-images

%post

    # base dnf/yum setup
    dnf -y update && \
    dnf -y install yum-utils && \
    dnf -y install epel-release

    # osg repo
    dnf -y install https://repo.opensciencegrid.org/osg/25-main/osg-25-main-el10-release-latest.rpm

    # pegasus repo 
    echo -e "# Pegasus\n[Pegasus]\nname=Pegasus\nbaseurl=https://download.pegasus.isi.edu/pegasus/development/5.1.2-dev/rhel/10/\$basearch/\ngpgcheck=0\nenabled=1\npriority=50" >/etc/yum.repos.d/pegasus.repo

    # well rounded basic system to support a wide range of user jobs
    dnf -y groupinstall "Development Tools" \
                        "Scientific Support"

    dnf -y install --allowerasing \
           bc \
           binutils \
           binutils-devel \
           coreutils \
           curl \
           fontconfig \
           gcc \
           gcc-c++ \
           gcc-gfortran \
           git \
           glib2-devel \
           glibc-langpack-en \
           glibc-locale-source \
           graphviz \
           gsl-devel \
           ImageMagick \
           iputils \
           java-21-openjdk \
           java-21-openjdk-devel \
           jq \
           libgfortran \
           libGLU \
           libgomp \
           libicu \
           libtool \
           libtool-ltdl \
           libX11-devel \
           libXaw-devel \
           libXext-devel \
           libXft-devel \
           libxml2 \
           libxml2-devel \
           libXmu-devel \
           libXpm \
           libXpm-devel \
           libXt \
           mesa-libGL-devel \
           openssh \
           openssh-server \
           pegasus \
           pelican \
           pelican-osdf-compat \
           python3-devel \
           python3-numpy \
           python3-scipy \
           R \
           rsync \
           subversion \
           tcl-devel \
           tcsh \
           time \
           tk-devel \
           wget \
           which \
           xxhash-devel

    # pelican
    dnf -y upgrade --enablerepo=osg-upcoming pelican pelican-osdf-compat

    # Cleaning caches to reduce size of image
    dnf clean all

    # build info
    echo "Timestamp:" `date --utc` | tee /image-build-info.txt

